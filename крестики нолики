<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>–ú–æ–∏ –∏–≥—Ä—ã</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f0f0f0;
      padding: 20px;
    }
    h1 {
      text-align: center;
    }
    .game {
      background: white;
      border-radius: 10px;
      padding: 20px;
      margin: 20px auto;
      max-width: 400px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    button {
      padding: 10px 20px;
      margin-top: 10px;
      font-size: 16px;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 5px;
      justify-content: center;
      margin-top: 10px;
    }
    .cell {
      width: 100px;
      height: 100px;
      font-size: 32px;
      text-align: center;
      line-height: 100px;
      border: 2px solid #ccc;
      cursor: pointer;
      user-select: none;
    }
  </style>
</head>
<body>

<h1>üéÆ –ú–æ–∏ –º–∏–Ω–∏-–∏–≥—Ä—ã</h1>

<div class="game" id="guessGame">
  <h2>–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ</h2>
  <p>–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10</p>
  <input type="number" id="guessInput" min="1" max="10">
  <button onclick="checkGuess()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="guessResult"></p>
</div>

<div class="game" id="clickerGame">
  <h2>–ö–ª–∏–∫–µ—Ä</h2>
  <p>–ù–∞–∂–º–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Ä–∞–∑!</p>
  <button onclick="incrementClick()">–ö–ª–∏–∫!</button>
  <p>–°—á—ë—Ç: <span id="clickCount">0</span></p>
</div>

<div class="game" id="tttGame">
  <h2>–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ (–ø—Ä–æ—Ç–∏–≤ –ò–ò)</h2>
  <p id="tttStatus">–¢—ã –∏–≥—Ä–∞–µ—à—å –∑–∞ X</p>
  <div class="board" id="board"></div>
  <button onclick="resetGame()">–°–±—Ä–æ—Å–∏—Ç—å</button>
</div>

<script>
  // –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ
  let secret = Math.floor(Math.random() * 10) + 1;
  function checkGuess() {
    const input = document.getElementById('guessInput').value;
    const result = document.getElementById('guessResult');
    if (parseInt(input) === secret) {
      result.textContent = "üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ß–∏—Å–ª–æ –±—ã–ª–æ " + secret;
      secret = Math.floor(Math.random() * 10) + 1;
    } else {
      result.textContent = "‚ùå –ù–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë!";
    }
  }

  // –ö–ª–∏–∫–µ—Ä
  let count = 0;
  function incrementClick() {
    count++;
    document.getElementById('clickCount').textContent = count;
  }

  // –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏
  const board = Array(9).fill("");
  const boardDiv = document.getElementById("board");
  const status = document.getElementById("tttStatus");

  function drawBoard() {
    boardDiv.innerHTML = "";
    board.forEach((val, i) => {
      const cell = document.createElement("div");
      cell.className = "cell";
      cell.textContent = val;
      cell.onclick = () => playerMove(i);
      boardDiv.appendChild(cell);
    });
  }

  function playerMove(i) {
    if (board[i] !== "" || checkWinner()) return;
    board[i] = "X";
    drawBoard();
    if (!checkWinner()) setTimeout(aiMove, 500);
  }

  function aiMove() {
    let empty = board.map((v, i) => v === "" ? i : null).filter(v => v !== null);
    if (empty.length === 0) return;
    const move = empty[Math.floor(Math.random() * empty.length)];
    board[move] = "O";
    drawBoard();
    checkWinner();
  }

  function checkWinner() {
    const wins = [
      [0,1,2],[3,4,5],[6,7,8],
      [0,3,6],[1,4,7],[2,5,8],
      [0,4,8],[2,4,6]
    ];
    for (let combo of wins) {
      const [a, b, c] = combo;
      if (board[a] && board[a] === board[b] && board[a] === board[c]) {
        status.textContent = board[a] + " –ø–æ–±–µ–¥–∏–ª!";
        return true;
      }
    }
    if (!board.includes("")) {
      status.textContent = "–ù–∏—á—å—è!";
      return true;
    }
    return false;
  }

  function resetGame() {
    for (let i = 0; i < 9; i++) board[i] = "";
    status.textContent = "–¢—ã –∏–≥—Ä–∞–µ—à—å –∑–∞ X";
    drawBoard();
  }

  drawBoard();
</script>

</body>
</html>
